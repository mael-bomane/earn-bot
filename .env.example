# .env.example
# This file provides an example of environment variables required by the application.
# Copy this file to .env and fill in the actual values.

# --- Application Environment ---
NODE_ENV=development
# Options: development, production, test
# Default: development

APP_PORT=3000
# The port on which the NestJS application will listen.
# Default: 3000

# --- Telegram Bot Configuration ---
TELEGRAM_BOT_TOKEN=YOUR_TELEGRAM_BOT_TOKEN_HERE
# Required: Your Telegram Bot API Token. Get this from BotFather on Telegram.

ADMIN_CHAT_ID=YOUR_TELEGRAM_ADMIN_CHAT_ID_OPTIONAL
# Optional: The chat ID of the Telegram user or group to send admin notifications to.
# This should be a string (e.g., "-1234567890123" for a group, or "123456789" for a user).

# --- Redis Configuration ---
REDIS_URL=redis://localhost:6379
# Required: The connection URL for your Redis instance.
# Examples:
#   - For local Redis: redis://localhost:6379
#   - If running inside Docker Compose (with Redis service named 'redis'): redis://redis:6379
#   - With password: redis://:yourpassword@localhost:6379

REDIS_DB=0
# Optional: The Redis database index to use (0-15 by default in Redis).
# Default: 0

# --- Data Fetcher Configuration ---
FETCH_URL=https://api.example.com/data/
# Required: The base URL for the external data fetching service/API.
# Must be a valid URI.

# --- Database Configuration (MySQL) ---
DATABASE_URL="mysql://your_app_user:your_app_password@mysql:3306/your_app_test_db"
# Required: The connection URL for your MySQL database.
# This should follow the format: mysql://USER:PASSWORD@HOST:PORT/DATABASE_NAME
# Examples:
#   - For local MySQL: mysql://root:rootpassword@localhost:3306/mydb
#   - If running inside Docker Compose (with MySQL service named 'mysql'): mysql://test_user:your_strong_password@mysql:3306/your_app_test_db
